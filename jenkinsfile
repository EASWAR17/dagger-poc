pipeline {
    agent any

    environment {
        IMAGE_NAME = "flask-app"
        CONTAINER_NAME = "flask-container"
    }

    stages {
		
		stage('Clean Existing Container and Image') {
			steps {
				script {
					// Stop and remove the container if it exists
					sh '''
					docker ps -a | grep ${CONTAINER_NAME} && docker stop ${CONTAINER_NAME} && docker rm ${CONTAINER_NAME} || true
					docker images | grep ${IMAGE_NAME} && docker rmi ${IMAGE_NAME}:latest || true
					'''
				}
			}
		}

		stage('Build and Deploy') {
			steps {
				script {
					sh '''
                        cd /home/easwar17/dagger-jenkins
                        echo "Current directory: $(pwd)"
                        ls -lah
                        '''
                    sh 'docker-compose -f /home/easwar17/dagger-jenkins/docker-compose.yml up --build -d'
				}
			}
		}

    }

    post {
        success {
            echo 'Deployment Successful!'
        }
        failure {
            echo 'Deployment Failed!'
        }
    }
}
